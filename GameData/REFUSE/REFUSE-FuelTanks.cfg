//
// All configuration related to fuel tank content
//

//
// IMPORTANT NOTES:
//
// OR statements (symbol: |) do not work inside a HAS statement: https://forum.kerbalspaceprogram.com/index.php?/topic/50533-15x-module-manager-311-november-12th-2018-its-dangerous-to-go-alone-take-those-cats-with-you/&do=findComment&comment=3335515

REFUSE_FuelTanksConfiguration
{
}

//
// Global settings
//

@REFUSE_FuelTanksConfiguration:BEFORE[ZZZ_REFUSE]
{
    // RP-1 Kerosene in combination with Liquid Oxygen
    // https://kinetics.nist.gov/RealFuels/macccr/macccr2008/Bruno2.pdf
    LOx_to_RP1_mass_ratio = 2.56
    // Based on Vulcain 2 (http://www.astronautix.com/v/vulcain2.html)
    LOx_to_LH2_mass_ratio = 6.7
    // densities are matched to CommunityResourcePark where reasonable/applicable
    // https://github.com/BobPalmer/CommunityResourcePack/blob/master/FOR_RELEASE/GameData/CommunityResourcePack/CommonResources.cfg
    LOx_to_LM_mass_ratio = 3.8
    // densities are matched to CommunityResourcePark where reasonable/applicablehttps://en.wikipedia.org/wiki/SpaceX_Raptor#Methane_engine_announcement_and_component_development
    RP1_density = #$@RESOURCE_DEFINITION[Kerosene]/density$ // metric tonnes/L
    LH2_density = #$@RESOURCE_DEFINITION[LqdHydrogen]/density$ // metric tonnes/L
    LM_density = #$@RESOURCE_DEFINITION[LqdMethane]/density$ // metric tonnes/L
    LOx_density = #$@RESOURCE_DEFINITION[LqdOxygen]/density$ // metric tonnes/L

    // Dry-wet ratios for fuel tanks
    // Meant to reflect state of the art Kerolox vehicles of today
    // Data is a bit scarse, but usin the strap-on booster of Falcon heavy as the simplest vehicle for which I could find estimates and guesstimates
    // http://www.spacelaunchreport.com/falconH.html
    // https://www.quora.com/How-much-do-the-landing-legs-on-SpaceX-F9-rockets-weigh
    // https://www.quora.com/What-is-the-mass-of-the-Titanium-Grid-Fins-on-a-SpaceX-Falcon-9-rocket
    // https://www.spacex.com/news/2015/08/31/grid-fins
    // https://space.stackexchange.com/questions/21346/how-many-kilos-of-nitrogen-does-falcon-9-load-for-its-first-stage-cold-gas-thru
    // 19 metric tonnes dry weight of booster
    // Subtract 9*470 kg for Merlin 1D engines --> 14.770 kg remaining
    // Subtract 2000 kg for landing legs --> 12.770 kg remaining
    // For grid fins I have two reasonings I can follow:
    // Either 4*41 kg for a number found online (see the links)
    // Or 4*100 kg for the small version of the titanium grid fins in the kerbal re-useability expansion
    // Or guesstimate myself, at 1.2 meter by 1.5 meter by (guesstimate) 20 cm, made of titanium which has a denity of 4110 kg/m3
    // 0.36 m3 volume, with a fill factor of (guesstimate) 5% gives a mass of 74 kg
    // For margin I'll go with the 100 kg
    // Subtract 4*100 kg for grid fins --> 12.370 kg remaining
    // Control electronics and batteries is anyone's guess, the 3.75meter command/battery unit included with the SpaceY has a mass of 900 kg
    // The RC-L01 has a mass of 500 kg, but too little battery, lets go middle ground, considering a falcon 9 doesn't have a reaction wheel in real life 
    // Subtract 700 kg for control electrics/batteries -->  11.670 kg remaining
    // For the remaining bits 500 kg for something to mount the engines in --> 11.170 kg remaining
    // The falcon 9 is equiped with nitrogen based cold gas thrusters, guesstimate that at 300 kg --> 10.870 kg remaining

    // So my guesstimate of falcon 9 side booster dry mass is 10.870 kg
    // Propellant mass is estimated to 407.600 kg
    // This yields a dry-wet ratio of 2.7%
    RP1_LOx_dry_to_wet_ratio = 0.027022430691609086
    // See the ./plot_dry_wet_mass_ratio_RP1_LOx.py script how to get to these values:
    RP1_dry_to_wet_ratio = 0.033645117795071615
    LOx_dry_to_wet_ratio = 0.024410722538900014

    LH2_LOx_dry_to_wet_ratio = 0.0687685605016428
    // See the ./plot_dry_wet_mass_ratio_LH2_LOx.py script how to get to these values:
    LH2_dry_to_wet_ratio = 0.28650877535189867

    LM_LOx_dry_to_wet_ratio = 0.06860205700857251
    LM_dry_to_wet_ratio = 0.1394725035888168

    // Until better data becomes available, stick with the RP1 figure for High-Test Peroxide
    HTP_dry_to_wet_ratio = #$RP1_dry_to_wet_ratio$

    // Estimate value intended for multi-role parts, where base-mass is not equal to tank dry mass
    stock_wet_to_fuel_ratio = 1.13 // based on dry to wet ratio of 1:8
    stock_dry_to_wet_ratio = 0.11

    //
    // Derived calculations start from here
    // Kerolox
    //

    LOx_to_RP1_mass_ratio_divider = #$LOx_to_RP1_mass_ratio$
    @LOx_to_RP1_mass_ratio_divider += 1.0

    // LOx_mass = LOx_to_RP1_mass_ratio * RP1_mass
    // LOx_density * LOx_volume = LOx_to_RP1_mass_ratio * RP1_density * RP1_volume
    // LOx_to_RP1_volume_ratio = LOx_volume/RP1_volume
    // LOx_to_RP1_volume_ratio = (LOx_to_RP1_mass_ratio * RP1_density)/LOx_density
    LOx_to_RP1_volume_ratio = #$RP1_density$
    @LOx_to_RP1_volume_ratio /= #$LOx_density$
    @LOx_to_RP1_volume_ratio *= #$LOx_to_RP1_mass_ratio$

    // Both resources are 1 unit per liter
    LOx_to_RP1_unit_ratio = #$LOx_to_RP1_volume_ratio$
    LOx_to_RP1_unit_ratio_divider = #$LOx_to_RP1_unit_ratio$
    @LOx_to_RP1_unit_ratio_divider += 1.0

    //
    // Derived calculations start from here
    // Hydrolox
    //
    LOx_to_LH2_mass_ratio_divider = #$LOx_to_LH2_mass_ratio$
    @LOx_to_LH2_mass_ratio_divider += 1.0

    // See LOx/RP1 calculation
    LOx_to_LH2_volume_ratio = #$LH2_density$
    @LOx_to_LH2_volume_ratio /= #$LOx_density$
    @LOx_to_LH2_volume_ratio *= #$LOx_to_LH2_mass_ratio$

    // Both resources are 1 unit per liter
    LOx_to_LH2_unit_ratio = #$LOx_to_LH2_volume_ratio$
    LOx_to_LH2_unit_ratio_divider = #$LOx_to_LH2_unit_ratio$
    @LOx_to_LH2_unit_ratio_divider += 1.0

	//
    // Methalox
    //
    LOx_to_LM_mass_ratio_divider = #$LOx_to_LM_mass_ratio$
    @LOx_to_LM_mass_ratio_divider += 1.0

    // See LOx/RP1 calculation
    LOx_to_LM_volume_ratio = #$LM_density$
    @LOx_to_LM_volume_ratio /= #$LM_density$
    @LOx_to_LM_volume_ratio *= #$LOx_to_LM_mass_ratio$

    // Both resources are 1 unit per liter
    LOx_to_LM_unit_ratio = #$LOx_to_LM_volume_ratio$
    LOx_to_LM_unit_ratio_divider = #$LOx_to_LM_unit_ratio$
    @LOx_to_LM_unit_ratio_divider += 1.0

    //
    // Convenience definitions for tanks
    //

    //
    // Based on wet mass
    //

    // RP1/LOx

    // per 1000 kg of wet mass
    LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank = 1.0
    @LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank -= #$RP1_LOx_dry_to_wet_ratio$ // propellant to wet ratio
    @LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank *= #$LOx_to_RP1_mass_ratio$ // fraction of propellant
    @LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank /= #$LOx_to_RP1_mass_ratio_divider$ // and normalize it
    @LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$ // volume = mass/density

    RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank = 1.0
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank -= #$RP1_LOx_dry_to_wet_ratio$
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank *= 1.0
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank /= #$LOx_to_RP1_mass_ratio_divider$
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank /= #$@RESOURCE_DEFINITION[Kerosene]/density$

    RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank = 1.0
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank -= #$RP1_dry_to_wet_ratio$
    @RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank /= #$@RESOURCE_DEFINITION[Kerosene]/density$

    // LH2/LOx

    LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank = 1.0
    @LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank -= #$LH2_LOx_dry_to_wet_ratio$ // propellant to wet ratio
    @LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank *= #$LOx_to_LH2_mass_ratio$ // fraction of propellant
    @LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank /= #$LOx_to_LH2_mass_ratio_divider$ // and normalize it
    @LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$ // volume = mass/density

    LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank = 1.0
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank -= #$LH2_LOx_dry_to_wet_ratio$
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank *= 1.0
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank /= #$LOx_to_LH2_mass_ratio_divider$
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank /= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$

    LH2_units_per_metric_tonne_of_wet_mass_for_LH2_tank = 1.0
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_tank -= #$LH2_dry_to_wet_ratio$
    @LH2_units_per_metric_tonne_of_wet_mass_for_LH2_tank /= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$

    // LM/LOx

    LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank = 1.0
    @LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank -= #$LM_LOx_dry_to_wet_ratio$ // propellant to wet ratio
    @LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank *= #$LOx_to_LM_mass_ratio$ // fraction of propellant
    @LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank /= #$LOx_to_LM_mass_ratio_divider$ // and normalize it
    @LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$ // volume = mass/density

    LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank = 1.0
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank -= #$LM_LOx_dry_to_wet_ratio$
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank *= 1.0
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank /= #$LOx_to_LM_mass_ratio_divider$
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank /= #$@RESOURCE_DEFINITION[LqdMethane]/density$

    LM_units_per_metric_tonne_of_wet_mass_for_LM_tank = 1.0
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_tank -= #$LM_dry_to_wet_ratio$
    @LM_units_per_metric_tonne_of_wet_mass_for_LM_tank /= #$@RESOURCE_DEFINITION[LqdMethane]/density$

    // LOx

    LOx_units_per_metric_tonne_of_wet_mass_for_LOx_tank = 1.0
    @LOx_units_per_metric_tonne_of_wet_mass_for_LOx_tank -= #$LOx_dry_to_wet_ratio$
    @LOx_units_per_metric_tonne_of_wet_mass_for_LOx_tank /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$

    // HTP

    HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank = 1.0
    @HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank -= #$HTP_dry_to_wet_ratio$
    @HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank /= #$@RESOURCE_DEFINITION[HTP]/density$

    //
    // Based on dry mass
    //

    // RP1/LOx

    // per 1000 kg of dry mass
    LOx_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank = #$LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
    @LOx_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank /= #$RP1_LOx_dry_to_wet_ratio$

    RP1_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank = #$RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
    @RP1_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank /= #$RP1_LOx_dry_to_wet_ratio$

    RP1_units_per_metric_tonne_of_dry_mass_for_RP1_tank = #$RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank$
    @RP1_units_per_metric_tonne_of_dry_mass_for_RP1_tank /= #$RP1_dry_to_wet_ratio$

    // LH2/LOx

    LOx_units_per_metric_tonne_of_dry_mass_for_LH2_LOx_tank = #$LOx_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank$
    @LOx_units_per_metric_tonne_of_dry_mass_for_LH2_LOx_tank /= #$LH2_LOx_dry_to_wet_ratio$

    LH2_units_per_metric_tonne_of_dry_mass_for_LH2_LOx_tank = #$LH2_units_per_metric_tonne_of_wet_mass_for_LH2_LOx_tank$
    @LH2_units_per_metric_tonne_of_dry_mass_for_LH2_LOx_tank /= #$LH2_LOx_dry_to_wet_ratio$

    LH2_units_per_metric_tonne_of_dry_mass_for_LH2_tank = #$LH2_units_per_metric_tonne_of_wet_mass_for_LH2_tank$
    @LH2_units_per_metric_tonne_of_dry_mass_for_LH2_tank /= #$LH2_dry_to_wet_ratio$

    // LM/LOx

    LOx_units_per_metric_tonne_of_dry_mass_for_LM_LOx_tank = #$LOx_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank$
    @LOx_units_per_metric_tonne_of_dry_mass_for_LM_LOx_tank /= #$LM_LOx_dry_to_wet_ratio$

    LM_units_per_metric_tonne_of_dry_mass_for_LM_LOx_tank = #$LM_units_per_metric_tonne_of_wet_mass_for_LM_LOx_tank$
    @LM_units_per_metric_tonne_of_dry_mass_for_LM_LOx_tank /= #$LM_LOx_dry_to_wet_ratio$

    LM_units_per_metric_tonne_of_dry_mass_for_LM_tank = #$LM_units_per_metric_tonne_of_wet_mass_for_LM_tank$
    @LM_units_per_metric_tonne_of_dry_mass_for_LM_tank /= #$LM_dry_to_wet_ratio$

    // LOx

    LOx_units_per_metric_tonne_of_dry_mass_for_LOx_tank = #$LOx_units_per_metric_tonne_of_wet_mass_for_LOx_tank$
    @LOx_units_per_metric_tonne_of_dry_mass_for_LOx_tank /= #$LOx_dry_to_wet_ratio$

    // HTP

    HTP_units_per_metric_tonne_of_dry_mass_for_HTP_tank = #$HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank$
    @HTP_units_per_metric_tonne_of_dry_mass_for_HTP_tank /= #$HTP_dry_to_wet_ratio$
}

//
// Kerosene + LqdOxygen
//

@PART[*]:HAS[@RESOURCE[LiquidFuel],@RESOURCE[Oxidizer]]:FOR[ZZZ_REFUSE]
{
    // dry mass
    REFUSE_wet_mass = #$mass$

    // original liquid fuel mass
    temp_mass = #$@RESOURCE_DEFINITION[LiquidFuel]/density$
    @temp_mass *= #$RESOURCE[LiquidFuel]/maxAmount$
    LF_mass = #$temp_mass$
	@REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[LiquidFuel] {}

    // original oxidizer mass
    temp_mass = #$@RESOURCE_DEFINITION[Oxidizer]/density$
    @temp_mass *= #$RESOURCE[Oxidizer]/maxAmount$
    Ox_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[Oxidizer] {}

    // configure new propellants
    RESOURCE
    {
        name = Kerosene
        amount = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
        @amount *= #$../LF_mass$
        maxAmount = #$amount$
    }
    RESOURCE
    {
        name = LqdOxygen
        amount = #$@REFUSE_FuelTanksConfiguration/LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
        // @amount *= #$../Ox_mass$
        @amount *= #$../LF_mass$
		@amount /= #$@REFUSE_FuelTanksConfiguration/LOx_to_RP1_mass_ratio$
        maxAmount = #$amount$
    }

    // adjust dry mass
    @mass = #$REFUSE_wet_mass$
    @mass *= #$@REFUSE_FuelTanksConfiguration/RP1_LOx_dry_to_wet_ratio$

    // cleanup is done during FINAL to allow RESOURCE to access this as well
}

// LFO: B9PartSwitch
// We are patching only the B9 tank, because all ModuleB9PartSwitch will be re-configured to use this one
@B9_TANK_TYPE[LFO,LFOX,bdbLFOX,bdbBalloon,bdbSkylabLFOX]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @title = Kerolox

    // dry mass
    REFUSE_wet_mass = #$tankMass$ // per liter

    // original liquid fuel mass
    temp_mass = #$@RESOURCE_DEFINITION[LiquidFuel]/density$
    @temp_mass *= #$RESOURCE[LiquidFuel]/unitsPerVolume$
    LF_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[LiquidFuel] {}

    // original oxidizer mass
    temp_mass = #$@RESOURCE_DEFINITION[Oxidizer]/density$
    @temp_mass *= #$RESOURCE[Oxidizer]/unitsPerVolume$
    Ox_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[Oxidizer] {}

    // configure new propellants
    RESOURCE
    {
        name = Kerosene
        unitsPerVolume = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
        @unitsPerVolume *= #$../LF_mass$
    }
    RESOURCE
    {
        name = LqdOxygen
        unitsPerVolume = #$@REFUSE_FuelTanksConfiguration/LOx_units_per_metric_tonne_of_wet_mass_for_RP1_LOx_tank$
        // @unitsPerVolume *= #$../Ox_mass$
        @unitsPerVolume *= #$../LF_mass$
		@unitsPerVolume /= #$@REFUSE_FuelTanksConfiguration/LOx_to_RP1_mass_ratio$
    }

    // adjust dry mass
    @tankMass = #$REFUSE_wet_mass$
    @tankMass *= #$@REFUSE_FuelTanksConfiguration/RP1_LOx_dry_to_wet_ratio$
}

// The fuel switch name is on the actual tank part
@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
    {
        SUBTYPE
        {
            name = Kerolox
            title = Kerolox
            tankType = LFO
            REFUSE_reset_part_mass = true
        }
    }
}

// ProceduralParts tank
@PART[*]:HAS[@MODULE[TankContentSwitcher]]:FOR[ZZZ_REFUSE]
{
    @MODULE[TankContentSwitcher]:HAS[@TANK_TYPE_OPTION[Mixed]]
    {
        @TANK_TYPE_OPTION[Mixed]
        {
            @name = Kerolox
            @dryDensity = #$@REFUSE_FuelTanksConfiguration/RP1_LOx_dry_to_wet_ratio$
            !RESOURCE[LiquidFuel] {}
            !RESOURCE[Oxidizer] {}

            // configure new propellants
            RESOURCE
            {
                name = Kerosene
                unitsPerT = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank$
            }
            RESOURCE
            {
                name = LqdOxygen
                unitsPerT = #$@REFUSE_FuelTanksConfiguration/LOx_units_per_metric_tonne_of_dry_mass_for_RP1_LOx_tank$
            }
        }
    }
}

//
// Kerosene
//

@PART[*]:HAS[@RESOURCE[LiquidFuel],!RESOURCE[Oxidizer]]:FOR[ZZZ_REFUSE]
{
    // dry mass
    REFUSE_wet_mass = #$mass$

    // original liquid fuel mass
    temp_mass = #$@RESOURCE_DEFINITION[LiquidFuel]/density$
    @temp_mass *= #$RESOURCE[LiquidFuel]/maxAmount$
    LF_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[LiquidFuel] {}

    // configure new propellants
    RESOURCE
    {
        name = Kerosene
        amount = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank$
        @amount *= #$../LF_mass$
        maxAmount = #$amount$
    }

    // adjust dry mass
    @mass = #$REFUSE_wet_mass$
    @mass *= #$@REFUSE_FuelTanksConfiguration/RP1_dry_to_wet_ratio$

    // cleanup is done during FINAL to allow RESOURCE to access this as well
}

// LiquidFuel: B9PartSwitch
// We are patching only the B9 tank, because all ModuleB9PartSwitch will be re-configured to use this one
@B9_TANK_TYPE[LiquidFuel,LF]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @title = Kerosene

    // dry mass
    REFUSE_wet_mass = #$tankMass$ // per liter

    // original liquid fuel mass
    temp_mass = #$@RESOURCE_DEFINITION[LiquidFuel]/density$
    @temp_mass *= #$RESOURCE[LiquidFuel]/unitsPerVolume$
    LF_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[LiquidFuel] {}

    // configure new propellants
    RESOURCE
    {
        name = Kerosene
        unitsPerVolume = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_wet_mass_for_RP1_tank$
        @unitsPerVolume *= #$../LF_mass$
    }

    // adjust dry mass
    @tankMass = #$REFUSE_wet_mass$
    @tankMass *= #$@REFUSE_FuelTanksConfiguration/RP1_dry_to_wet_ratio$
}

// The fuel switch name is on the actual tank part
@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
    {
        SUBTYPE
        {
            name = Kerosene
            title = Kerosene
            tankType = LiquidFuel
            REFUSE_reset_part_mass = true
        }
    }
}

// ProceduralParts tank
@PART[*]:HAS[@MODULE[TankContentSwitcher]]:FOR[ZZZ_REFUSE]
{
    @MODULE[TankContentSwitcher]:HAS[@TANK_TYPE_OPTION[LiquidFuel]]
    {
        @TANK_TYPE_OPTION[LiquidFuel]
        {
            @name = Kerosene
            @dryDensity = #$@REFUSE_FuelTanksConfiguration/RP1_dry_to_wet_ratio$
            !RESOURCE[LiquidFuel] {}

            // configure new propellants
            RESOURCE
            {
                name = Kerosene
                unitsPerT = #$@REFUSE_FuelTanksConfiguration/RP1_units_per_metric_tonne_of_dry_mass_for_RP1_tank$
            }
        }
    }
}

// InterstellarFuelSwitch
@PART[*]:HAS[@MODULE[InterstellarFuelSwitch]]:NEEDS[InterstellarFuelSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[InterstellarFuelSwitch]:HAS[#tankSwitchNames[*]],*
    {
		@tankSwitchNames ^= :liquidfuel:Kerosene:
		@resourceGui ^= :liquidfuel:Kerosene:
		@resourceNames ^= :liquidfuel:Kerosene:
    }
}

//
// LqdOxygen
//

// OX: CryoTanks
@B9_TANK_TYPE[OX,Oxidizer]:NEEDS[B9PartSwitch,CryoTanks]:FOR[ZZZ_REFUSE]
{
    @title = LqdOxygen

    // dry mass
    REFUSE_wet_mass = #$tankMass$ // per liter

    // original oxidizer mass
    temp_mass = #$@RESOURCE_DEFINITION[Oxidizer]/density$
    @temp_mass *= #$RESOURCE[Oxidizer]/unitsPerVolume$
    Ox_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[Oxidizer] {}

    // configure new propellants
    RESOURCE
    {
        name = LqdOxygen
        unitsPerVolume = #$@REFUSE_FuelTanksConfiguration/LOx_units_per_metric_tonne_of_wet_mass_for_LOx_tank$
        @unitsPerVolume *= #$../Ox_mass$
    }

    // adjust dry mass
    @tankMass = #$REFUSE_wet_mass$
    @tankMass *= #$@REFUSE_FuelTanksConfiguration/LOx_dry_to_wet_ratio$
}

// The fuel switch name is on the actual tank part
@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]]:NEEDS[B9PartSwitch,CryoTanks]:FOR[ZZZ_REFUSE]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
    {
        SUBTYPE
        {
            name = LqdOxygen
            title = LqdOxygen
            tankType = OX
            REFUSE_reset_part_mass = true
        }
    }
}

// // LqdOxygen also boils off a bit
// @PART[*]:HAS[@MODULE[ModuleCryoTank],@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Kerolox]|@SUBTYPE[LqdOxygen]]]:NEEDS[CryoTanks,B9PartSwitch]:FOR[ZZZ_REFUSE]
// {
	// @MODULE[ModuleCryoTank],*
	// {
		// BOILOFFCONFIG
		// {
			// FuelName = LqdOxygen
			// // in % per hr
			// BoiloffRate = 0.002
			// CoolingCost = 0.01
		// }
	// }
// }

// ProceduralParts tank
@PART[*]:HAS[@MODULE[TankContentSwitcher]]:FOR[ZZZ_REFUSE]
{
    @MODULE[TankContentSwitcher]:HAS[@TANK_TYPE_OPTION[Oxidizer]]
    {
        @TANK_TYPE_OPTION[Oxidizer]
        {
            @name = LOx
            @dryDensity = #$@REFUSE_FuelTanksConfiguration/LOx_dry_to_wet_ratio$
            !RESOURCE[Oxidizer] {}

            // configure new propellants
            RESOURCE
            {
                name = LqdOxygen
                unitsPerT = #$@REFUSE_FuelTanksConfiguration/LOx_units_per_metric_tonne_of_dry_mass_for_LOx_tank$
            }
        }
    }
}

// InterstellarFuelSwitch
@PART[*]:HAS[@MODULE[InterstellarFuelSwitch]]:NEEDS[InterstellarFuelSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[InterstellarFuelSwitch]:HAS[#tankSwitchNames[*]],*
    {
		@tankSwitchNames ^= :oxidizer:LqdOxygen:
		@resourceGui ^= :oxidizer:LqdOxygen:
		@resourceNames ^= :oxidizer:LqdOxygen:
    }
}

//
// HTP
//

// TODO: Figure out what kind of parts have a secondary function as fuel storage
@PART[*]:HAS[@RESOURCE[MonoPropellant],!MODULE[KerbalEVA],!MODULE[ModuleCommand]]:FOR[ZZZ_REFUSE]
{
    // dry mass
    REFUSE_wet_mass = #$mass$

    // original monoprop mass
    temp_mass = #$@RESOURCE_DEFINITION[MonoPropellant]/density$
    @temp_mass *= #$RESOURCE[MonoPropellant]/maxAmount$
    HTP_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[MonoPropellant] {}

    // configure new propellants
    RESOURCE
    {
        name = HTP
        amount = #$@REFUSE_FuelTanksConfiguration/HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank$
        @amount *= #$../HTP_mass$
        maxAmount = #$amount$
    }

    // adjust dry mass
    @mass = #$REFUSE_wet_mass$
    @mass *= #$@REFUSE_FuelTanksConfiguration/HTP_dry_to_wet_ratio$

    // cleanup is done during FINAL to allow RESOURCE to access this as well
}

// Command module
@PART[*]:HAS[@RESOURCE[MonoPropellant],@MODULE[ModuleCommand]]:FOR[ZZZ_REFUSE]
{
    // dry mass
    REFUSE_wet_mass = 0.0 // we have to guess dry-mass of fuel tank from fuel mass

    // original monoprop mass
    temp_mass = #$@RESOURCE_DEFINITION[MonoPropellant]/density$
    @temp_mass *= #$RESOURCE[MonoPropellant]/maxAmount$
    HTP_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    @REFUSE_wet_mass *= #$@REFUSE_FuelTanksConfiguration/stock_wet_to_fuel_ratio$
    -temp_mass = delete
    !RESOURCE[MonoPropellant] {}

    // configure new propellants
    RESOURCE
    {
        name = HTP
        amount = #$@REFUSE_FuelTanksConfiguration/HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank$
        @amount *= #$../HTP_mass$
        maxAmount = #$amount$
    }

    // adjust dry mass, subtract previous dry mass
    temp_mass = #$REFUSE_wet_mass$
    @temp_mass *= #$@REFUSE_FuelTanksConfiguration/stock_dry_to_wet_ratio$
    @mass -= #$temp_mass$

    // add new dry mass
    @temp_mass = #$REFUSE_wet_mass$
    @temp_mass *= #$@REFUSE_FuelTanksConfiguration/HTP_dry_to_wet_ratio$
    @mass += #$temp_mass$
    -temp_mass = delete

    // cleanup is done during FINAL to allow RESOURCE to access this as well
}

// MonoPropellant: B9PartSwitch
@B9_TANK_TYPE[MonoPropellant,bdbMonoProp,MPEC]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @title = HTP

    // dry mass
    REFUSE_wet_mass = #$tankMass$ // per liter

    // original monoprop mass
    temp_mass = #$@RESOURCE_DEFINITION[MonoPropellant]/density$
    @temp_mass *= #$RESOURCE[MonoPropellant]/unitsPerVolume$
    HTP_mass = #$temp_mass$
    @REFUSE_wet_mass += #$temp_mass$
    -temp_mass = delete
    !RESOURCE[MonoPropellant] {}

    // configure new propellants
    RESOURCE
    {
        name = HTP
        unitsPerVolume = #$@REFUSE_FuelTanksConfiguration/HTP_units_per_metric_tonne_of_wet_mass_for_HTP_tank$
        @unitsPerVolume *= #$../HTP_mass$
    }

    // adjust dry mass
    @tankMass = #$REFUSE_wet_mass$
    @tankMass *= #$@REFUSE_FuelTanksConfiguration/HTP_dry_to_wet_ratio$
}

// The fuel switch name is on the actual tank part
@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]]:NEEDS[B9PartSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
    {
        SUBTYPE
        {
            name = HTP
            title = HTP
            tankType = MonoPropellant
            REFUSE_reset_part_mass = true
        }
    }
}

// ProceduralParts tank
@PART[*]:HAS[@MODULE[TankContentSwitcher]]:FOR[ZZZ_REFUSE]
{
    @MODULE[TankContentSwitcher]:HAS[@TANK_TYPE_OPTION[RCS]]
    {
        @TANK_TYPE_OPTION[RCS]
        {
            @name = HTP
            @dryDensity = #$@REFUSE_FuelTanksConfiguration/HTP_dry_to_wet_ratio$
            !RESOURCE[MonoPropellant] {}

            // configure new propellants
            RESOURCE
            {
                name = HTP
                unitsPerT = #$@REFUSE_FuelTanksConfiguration/HTP_units_per_metric_tonne_of_dry_mass_for_HTP_tank$
            }
        }
    }
}

// InterstellarFuelSwitch
@PART[*]:HAS[@MODULE[InterstellarFuelSwitch]]:NEEDS[InterstellarFuelSwitch]:FOR[ZZZ_REFUSE]
{
    @MODULE[InterstellarFuelSwitch]:HAS[#tankSwitchNames[*]],*
    {
		@tankSwitchNames ^= :monopropellant:HTP:
		@resourceGui ^= :monopropellant:HTP:
		@resourceNames ^= :monopropellant:HTP:
    }
}

//
// Preparation
//

// Delete all references to tank variants before patching all the new ones
@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]]:BEFORE[ZZZ_REFUSE]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
    {
        -SUBTYPE,* {}
    }
}

//
// Cleanup
//

@PART[*]:HAS[#REFUSE_wet_mass]:FINAL
{
    // cleanup
    -REFUSE_wet_mass = delete
	-LF_mass = delete
	-LM_mass = delete
	-Ox_mass = delete
	-HTP_mass = delete
}

@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[*]:HAS[#REFUSE_reset_part_mass[*]]]]:FINAL
{
    @mass = 0.0 // we recalculated proper dry mass on the tank-switch, any part mass is going to increase dry-mass

    @MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[*]]
    {
        @SUBTYPE:HAS[#REFUSE_reset_part_mass[*]]
        {
            -REFUSE_reset_part_mass = delete
        }
    }
}
